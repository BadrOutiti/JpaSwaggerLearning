openapi: "3.0.0"
info:
  title: Swagger Learning API
  description: This is an api specification for the Learning API, it includes the specification for Users, Accounts, Cards and Transactions
  version: "1.0.0"

paths:
  /user:
    get:
      summary: Get a list of all Users
      operationId: listUsers
      tags:
        - User
      parameters:
        - name: userLimit
          in: query
          description: Maximum number of Users to return
          required: false
          schema:
            type: integer
      responses:
        '200':
          description: A paged list of Users
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      summary: Create an User
      operationId: createUser
      tags:
        - User
      requestBody:
        description: User to create
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserCreate'
      responses:
        '201':
          description: User created successfully
          headers:
            Location:
              description: URI of the created resource
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /user/{userId}:
    get:
      summary: Information of a specific User
      operationId: showUserById
      tags:
        - User
      parameters:
        - name: userId
          in: path
          description: The id of the User to retrieve
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: User details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '404':
          description: User not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /account:
    get:
      summary: Get a list of all Accounts
      operationId: listAccounts
      tags:
        - Account
      responses:
        '200':
          description: A list of accounts
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Account'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      summary: Create an Account object
      operationId: createAccount
      tags:
        - Account
      requestBody:
        description: Account to Add
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountReference'
      responses:
        '201':
          description: Account created
          headers:
            Location:
              description: URI of the created resource
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Account"
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /card:
    get:
      summary: Get a list of all cards
      operationId: listCards
      tags:
        - Card
      responses:
        '200':
          description: A list of Cards
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Card'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      summary: Create a Card object
      operationId: createCard
      tags:
        - Card
      requestBody:
        description: User to add
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CardCreate'
      responses:
        '201':
          description: Card created
          headers:
            Location:
              description: URI of the created resource
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Card"
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /transaction:
    get:
      summary: Get a list of all transactions
      operationId: listTransactions
      tags:
        - Transaction
      responses:
        '200':
          description: A list of Transactions
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Transaction'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /transaction/{cardId}:
    get:
      summary: Get all transaction of a specific card
      operationId: getTransactionsByCard
      tags:
        - Transaction
      parameters:
        - name: cardId
          in: path
          description: The ID of the Card to track
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Transaction List
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Transaction'
        '404':
          description: No Transactions found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"


components:
  schemas:
    User:
      type: object
      required:
        - id
        - name
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string

    UserCreate:
      type: object
      required:
        - name
        - password
      properties:
        name:
          type: string
        password:
          type: string
          minLength: 8
          maxLength: 45
          pattern: "^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#$%^&*_=+-]).{8,45}$"

    Card:
      type: object
      required:
        - id
        - uuid
        - cardNumber
      properties:
        id:
          type: integer
        uuid:
          type: string
        cardNumber:
          type: string

    Cards:
      type: array
      items:
        $ref: "#/components/schemas/Card"  # Reference to the Card schema

    CardCreate:
      type: object
      required:
        - cardNumber
      properties:
        cardNumber:
          type: string

    Account:
      type: object
      required:
        - id
        - User
        - Cards
      properties:
        id:
          type: integer
        User:
          $ref: "#/components/schemas/User"
        Cards:
          $ref: "#/components/schemas/Cards"

    AccountReference:
      type: object
      required:
        - UserId
      properties:
        UserId:
          type: integer

    Transaction:
      type: object
      required:
        - id
        - amountInChf
        - Date
        - Card
      properties:
        id:
          type: integer
        amountInChf:
          type: integer
        Date:
          type: integer
        Card:
          $ref: "#/components/schemas/Card"

    Error:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
